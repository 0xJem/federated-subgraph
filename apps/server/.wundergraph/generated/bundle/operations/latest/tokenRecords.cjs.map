{
  "version": 3,
  "sources": ["../../../../operations/latest/tokenRecords.ts", "../../../wundergraph.factory.ts"],
  "sourcesContent": ["import { TokenRecordsLatestResponseData } from '../../generated/models';\nimport { createOperation } from '../../generated/wundergraph.factory';\n\n/**\n * This custom query will return a flat array containing the latest TokenRecord objects for\n * each endpoint.\n */\nexport default createOperation.query({\n  handler: async (ctx) => {\n    console.log(`Commencing latest query for TokenRecord`);\n\n    // Combine across pages and endpoints\n    const combinedTokenRecords: TokenRecordsLatestResponseData[\"treasuryEthereum_tokenRecords\"] = [];\n\n    const queryResult = await ctx.operations.query({\n      operationName: \"tokenRecordsLatest\",\n    });\n\n    if (queryResult.data) {\n      console.log(`Got ${queryResult.data.treasuryArbitrum_tokenRecords.length} Arbitrum records.`);\n      combinedTokenRecords.push(...queryResult.data.treasuryArbitrum_tokenRecords);\n      console.log(`Got ${queryResult.data.treasuryEthereum_tokenRecords.length} Ethereum records.`);\n      combinedTokenRecords.push(...queryResult.data.treasuryEthereum_tokenRecords);\n      console.log(`Got ${queryResult.data.treasuryFantom_tokenRecords.length} Fantom records.`);\n      combinedTokenRecords.push(...queryResult.data.treasuryFantom_tokenRecords);\n      console.log(`Got ${queryResult.data.treasuryPolygon_tokenRecords.length} Polygon records.`);\n      combinedTokenRecords.push(...queryResult.data.treasuryPolygon_tokenRecords);\n    }\n\n    console.log(`Returning ${combinedTokenRecords.length} records.`);\n    return combinedTokenRecords;\n  },\n});\n", "// Code generated by wunderctl. DO NOT EDIT.\n\nimport type { InternalClient } from \"./wundergraph.internal.client\";\nimport { InternalOperationsClient } from \"./wundergraph.internal.operations.client\";\nimport type { Role } from \"./wundergraph.server\";\nimport type { CustomClaims } from \"./claims\";\nimport { createOperationFactory } from \"@wundergraph/sdk/operations\";\n\nexport {z, AuthorizationError} from \"@wundergraph/sdk/operations\";\nexport const createOperation = createOperationFactory<InternalClient, Role, CustomClaims, InternalOperationsClient>();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACMA,wBAAuC;AAEvC,IAAAA,qBAAoC;AAC7B,IAAM,sBAAkB,0CAAqF;;;ADFpH,IAAO,uBAAQ,gBAAgB,MAAM;AAAA,EACnC,SAAS,OAAO,QAAQ;AACtB,YAAQ,IAAI,yCAAyC;AAGrD,UAAM,uBAAwF,CAAC;AAE/F,UAAM,cAAc,MAAM,IAAI,WAAW,MAAM;AAAA,MAC7C,eAAe;AAAA,IACjB,CAAC;AAED,QAAI,YAAY,MAAM;AACpB,cAAQ,IAAI,OAAO,YAAY,KAAK,8BAA8B,0BAA0B;AAC5F,2BAAqB,KAAK,GAAG,YAAY,KAAK,6BAA6B;AAC3E,cAAQ,IAAI,OAAO,YAAY,KAAK,8BAA8B,0BAA0B;AAC5F,2BAAqB,KAAK,GAAG,YAAY,KAAK,6BAA6B;AAC3E,cAAQ,IAAI,OAAO,YAAY,KAAK,4BAA4B,wBAAwB;AACxF,2BAAqB,KAAK,GAAG,YAAY,KAAK,2BAA2B;AACzE,cAAQ,IAAI,OAAO,YAAY,KAAK,6BAA6B,yBAAyB;AAC1F,2BAAqB,KAAK,GAAG,YAAY,KAAK,4BAA4B;AAAA,IAC5E;AAEA,YAAQ,IAAI,aAAa,qBAAqB,iBAAiB;AAC/D,WAAO;AAAA,EACT;AACF,CAAC;",
  "names": ["import_operations"]
}
