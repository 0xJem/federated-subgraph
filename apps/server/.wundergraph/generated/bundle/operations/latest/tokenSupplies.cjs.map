{
  "version": 3,
  "sources": ["../../../../operations/latest/tokenSupplies.ts", "../../../wundergraph.factory.ts"],
  "sourcesContent": ["import { TokenSuppliesLatestResponseData } from '../../generated/models';\nimport { createOperation } from '../../generated/wundergraph.factory';\n\n/**\n * This custom query will return a flat array containing the latest TokenSupply objects for\n * each endpoint.\n */\nexport default createOperation.query({\n  handler: async (ctx) => {\n    console.log(`Commencing latest query for TokenSupply`);\n\n    // Combine across pages and endpoints\n    const combinedTokenSupplies: TokenSuppliesLatestResponseData[\"treasuryEthereum_tokenSupplies\"] = [];\n\n    const queryResult = await ctx.operations.query({\n      operationName: \"tokenSuppliesLatest\",\n    });\n\n    if (queryResult.data) {\n      console.log(`Got ${queryResult.data.treasuryArbitrum_tokenSupplies.length} Arbitrum records.`);\n      combinedTokenSupplies.push(...queryResult.data.treasuryArbitrum_tokenSupplies);\n      console.log(`Got ${queryResult.data.treasuryEthereum_tokenSupplies.length} Ethereum records.`);\n      combinedTokenSupplies.push(...queryResult.data.treasuryEthereum_tokenSupplies);\n      console.log(`Got ${queryResult.data.treasuryFantom_tokenSupplies.length} Fantom records.`);\n      combinedTokenSupplies.push(...queryResult.data.treasuryFantom_tokenSupplies);\n      console.log(`Got ${queryResult.data.treasuryPolygon_tokenSupplies.length} Polygon records.`);\n      combinedTokenSupplies.push(...queryResult.data.treasuryPolygon_tokenSupplies);\n    }\n\n    console.log(`Returning ${combinedTokenSupplies.length} records.`);\n    return combinedTokenSupplies;\n  },\n});\n", "// Code generated by wunderctl. DO NOT EDIT.\n\nimport type { InternalClient } from \"./wundergraph.internal.client\";\nimport { InternalOperationsClient } from \"./wundergraph.internal.operations.client\";\nimport type { Role } from \"./wundergraph.server\";\nimport type { CustomClaims } from \"./claims\";\nimport { createOperationFactory } from \"@wundergraph/sdk/operations\";\n\nexport {z, AuthorizationError} from \"@wundergraph/sdk/operations\";\nexport const createOperation = createOperationFactory<InternalClient, Role, CustomClaims, InternalOperationsClient>();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACMA,wBAAuC;AAEvC,IAAAA,qBAAoC;AAC7B,IAAM,sBAAkB,0CAAqF;;;ADFpH,IAAO,wBAAQ,gBAAgB,MAAM;AAAA,EACnC,SAAS,OAAO,QAAQ;AACtB,YAAQ,IAAI,yCAAyC;AAGrD,UAAM,wBAA2F,CAAC;AAElG,UAAM,cAAc,MAAM,IAAI,WAAW,MAAM;AAAA,MAC7C,eAAe;AAAA,IACjB,CAAC;AAED,QAAI,YAAY,MAAM;AACpB,cAAQ,IAAI,OAAO,YAAY,KAAK,+BAA+B,0BAA0B;AAC7F,4BAAsB,KAAK,GAAG,YAAY,KAAK,8BAA8B;AAC7E,cAAQ,IAAI,OAAO,YAAY,KAAK,+BAA+B,0BAA0B;AAC7F,4BAAsB,KAAK,GAAG,YAAY,KAAK,8BAA8B;AAC7E,cAAQ,IAAI,OAAO,YAAY,KAAK,6BAA6B,wBAAwB;AACzF,4BAAsB,KAAK,GAAG,YAAY,KAAK,4BAA4B;AAC3E,cAAQ,IAAI,OAAO,YAAY,KAAK,8BAA8B,yBAAyB;AAC3F,4BAAsB,KAAK,GAAG,YAAY,KAAK,6BAA6B;AAAA,IAC9E;AAEA,YAAQ,IAAI,aAAa,sBAAsB,iBAAiB;AAChE,WAAO;AAAA,EACT;AACF,CAAC;",
  "names": ["import_operations"]
}
